<%

ENV['DATABASE_URL'] = ENV['DATABASE_URL'] ? ENV['DATABASE_URL'].gsub('{USER}', ENV['USER']) : ENV['DATABASE_URL']

require 'cgi'
require 'uri'

begin
  uri = URI.parse(ENV["DATABASE_URL"])
rescue URI::InvalidURIError
  raise "Invalid DATABASE_URL"
end

def attribute(name, value, force_string = false)
  if value
    value_string =
      if force_string
        '"' + value + '"'
      else
        value
      end
    "#{name}: #{value_string}"
  else
    ""
  end
end

adapter = uri.scheme
adapter = "postgresql" if adapter == "postgres"

database = (uri.path || "").split("/")[1]

username = uri.user
password = uri.password

host = uri.host
port = uri.port

params = CGI.parse(uri.query || "")

%>

development:
  <%= attribute "adapter",  adapter %>
  <%= attribute "database", database %>
  <%= attribute "username", username %>
  <%= attribute "password", password, true %>
  <%= attribute "host",     host %>
  <%= attribute "port",     port %>

  <% params.each do |key, value| %>
  <%= key %>: <%= value.first %>
<% end %>

test:
  <%= attribute "adapter",  adapter %>
  <%= attribute "database", database + '-test' %>
  <%= attribute "username", username %>
  <%= attribute "password", password, true %>
  <%= attribute "host",     host %>
  <%= attribute "port",     port %>

  <% params.each do |key, value| %>
  <%= key %>: <%= value.first %>
<% end %>